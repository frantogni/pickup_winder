
; PICBASIC PRO(TM) Compiler 2.60C, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 
_USED			EQU	1

	INCLUDE	"C:\PBP\16F887.INC"


; Define statements.
; C:\PBP\16F887.BAS        	00018	DEFINE  CODE_SIZE 8
#define		CODE_SIZE		 8
; G:\ELE\@BASIC\BOB955~1.PBP	00005	DEFINE OSC 8
#define		OSC		 8
; G:\ELE\@BASIC\BOB955~1.PBP	00037	DEFINE  LCD_DREG        PORTD
#define		LCD_DREG		        PORTD
; G:\ELE\@BASIC\BOB955~1.PBP	00038	DEFINE  LCD_DBIT        4
#define		LCD_DBIT		        4
; G:\ELE\@BASIC\BOB955~1.PBP	00039	DEFINE  LCD_BITS        4
#define		LCD_BITS		        4
; G:\ELE\@BASIC\BOB955~1.PBP	00040	DEFINE  LCD_RSREG       PORTC
#define		LCD_RSREG		       PORTC
; G:\ELE\@BASIC\BOB955~1.PBP	00041	DEFINE  LCD_RSBIT       6
#define		LCD_RSBIT		       6
; G:\ELE\@BASIC\BOB955~1.PBP	00042	DEFINE  LCD_EREG        PORTC
#define		LCD_EREG		        PORTC
; G:\ELE\@BASIC\BOB955~1.PBP	00043	DEFINE  LCD_EBIT        7
#define		LCD_EBIT		        7
; G:\ELE\@BASIC\BOB955~1.PBP	00044	DEFINE  LCD_LINES       4
#define		LCD_LINES		       4
; G:\ELE\@BASIC\BOB955~1.PBP	00045	DEFINE  LCD_COMMANDUS   2000  
#define		LCD_COMMANDUS		   2000  
; G:\ELE\@BASIC\BOB955~1.PBP	00046	DEFINE  LCD_DATAUS      50
#define		LCD_DATAUS		      50

RAM_START       		EQU	00020h
RAM_END         		EQU	001EFh
RAM_BANKS       		EQU	00004h
BANK0_START     		EQU	00020h
BANK0_END       		EQU	0007Fh
BANK1_START     		EQU	000A0h
BANK1_END       		EQU	000EFh
BANK2_START     		EQU	00110h
BANK2_END       		EQU	0016Fh
BANK3_START     		EQU	00190h
BANK3_END       		EQU	001EFh
EEPROM_START    		EQU	02100h
EEPROM_END      		EQU	021FFh

; C:\PBP\PBPPIC14.RAM      	00012	A00020	R0      VAR     WORD BANK0 SYSTEM       ' System Register
R0              		EQU	RAM_START + 000h
; C:\PBP\PBPPIC14.RAM      	00013	A00022	R1      VAR     WORD BANK0 SYSTEM       ' System Register
R1              		EQU	RAM_START + 002h
; C:\PBP\PBPPIC14.RAM      	00014	A00024	R2      VAR     WORD BANK0 SYSTEM       ' System Register
R2              		EQU	RAM_START + 004h
; C:\PBP\PBPPIC14.RAM      	00015	A00026	R3      VAR     WORD BANK0 SYSTEM       ' System Register
R3              		EQU	RAM_START + 006h
; C:\PBP\PBPPIC14.RAM      	00016	A00028	R4      VAR     WORD BANK0 SYSTEM       ' System Register
R4              		EQU	RAM_START + 008h
; C:\PBP\PBPPIC14.RAM      	00017	A0002A	R5      VAR     WORD BANK0 SYSTEM       ' System Register
R5              		EQU	RAM_START + 00Ah
; C:\PBP\PBPPIC14.RAM      	00018	A0002C	R6      VAR     WORD BANK0 SYSTEM       ' System Register
R6              		EQU	RAM_START + 00Ch
; C:\PBP\PBPPIC14.RAM      	00019	A0002E	R7      VAR     WORD BANK0 SYSTEM       ' System Register
R7              		EQU	RAM_START + 00Eh
; C:\PBP\PBPPIC14.RAM      	00020	A00030	R8      VAR     WORD BANK0 SYSTEM       ' System Register
R8              		EQU	RAM_START + 010h
; C:\PBP\PBPPIC14.RAM      	00026	A00032	FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
FLAGS           		EQU	RAM_START + 012h
; C:\PBP\PBPPIC14.RAM      	00025	A00033	GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Parameter
GOP             		EQU	RAM_START + 013h
; C:\PBP\PBPPIC14.RAM      	00022	A00034	RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
RM1             		EQU	RAM_START + 014h
; C:\PBP\PBPPIC14.RAM      	00024	A00035	RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
RM2             		EQU	RAM_START + 015h
; C:\PBP\PBPPIC14.RAM      	00021	A00036	RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
RR1             		EQU	RAM_START + 016h
; C:\PBP\PBPPIC14.RAM      	00023	A00037	RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
RR2             		EQU	RAM_START + 017h
; G:\ELE\@BASIC\BOB955~1.PBP	00061	A00038	CONTADOR    var word
_CONTADOR        		EQU	RAM_START + 018h
; G:\ELE\@BASIC\BOB955~1.PBP	00001	A0003A	' Registro de configuración
T1              		EQU	RAM_START + 01Ah
; G:\ELE\@BASIC\BOB955~1.PBP	00001	A0003C	' Registro de configuración
T2              		EQU	RAM_START + 01Ch
; G:\ELE\@BASIC\BOB955~1.PBP	00066	A0003E	ULT_VAL     VAR WORD
_ULT_VAL         		EQU	RAM_START + 01Eh
; G:\ELE\@BASIC\BOB955~1.PBP	00065	A00040	VALOR       VAR WORD
_VALOR           		EQU	RAM_START + 020h
; G:\ELE\@BASIC\BOB955~1.PBP	00070	A00042	VEL_BOB     var word
_VEL_BOB         		EQU	RAM_START + 022h
; G:\ELE\@BASIC\BOB955~1.PBP	00063	A00044	VUE_MIC     VAR WORD
_VUE_MIC         		EQU	RAM_START + 024h
; G:\ELE\@BASIC\BOB955~1.PBP	00062	A00046	VUELTAS     var WORD
_VUELTAS         		EQU	RAM_START + 026h
; G:\ELE\@BASIC\BOB955~1.PBP	00071	A00048	AUX         var BYTE
_AUX             		EQU	RAM_START + 028h
; G:\ELE\@BASIC\BOB955~1.PBP	00067	A00049	RAMPA       VAR BYTE
_RAMPA           		EQU	RAM_START + 029h
; G:\ELE\@BASIC\BOB955~1.PBP	00068	A0004A	RETARDO     VAR BYTE
_RETARDO         		EQU	RAM_START + 02Ah
; G:\ELE\@BASIC\BOB955~1.PBP	00069	A0004B	VEL_MIC     var byte
_VEL_MIC         		EQU	RAM_START + 02Bh
; G:\ELE\@BASIC\BOB955~1.PBP	00064	A0004C	VUE_BOB     VAR BYTE
_VUE_BOB         		EQU	RAM_START + 02Ch
; C:\PBP\16F887.BAS        	00022	PORTL   VAR     PORTB
_PORTL           		EQU	 PORTB
; C:\PBP\16F887.BAS        	00023	PORTH   VAR     PORTC
_PORTH           		EQU	 PORTC
; C:\PBP\16F887.BAS        	00024	TRISL   VAR     TRISB
_TRISL           		EQU	 TRISB
; C:\PBP\16F887.BAS        	00025	TRISH   VAR     TRISC
_TRISH           		EQU	 TRISC
_VUE_MIC??BYTE0  		EQU	_VUE_MIC
_VUE_MIC??BYTE1  		EQU	_VUE_MIC + 001h
#define _SW1             	_PORTE??1
#define _SENTIDO         	_PORTD??1
#define _PORTE??1        	 PORTE, 001h
#define _PORTD??1        	 PORTD, 001h
#define _PORTB??0        	 PORTB, 000h
#define _INTCON??4       	 INTCON, 004h
#define _PORTC??2        	 PORTC, 002h
#define _PORTA??7        	 PORTA, 007h
#define _ADCON0??1       	 ADCON0, 001h
#define _PIR1??6         	 PIR1, 006h
#define _PORTA??1        	 PORTA, 001h
#define _INTCON??1       	 INTCON, 001h
	INCLUDE	"BOB955~1.MAC"
	INCLUDE	"C:\PBP\PBPPIC14.LIB"


; C:\PBP\16F887.BAS        	00012	BANK0   $0020, $007F
; C:\PBP\16F887.BAS        	00013	BANK1   $00A0, $00EF
; C:\PBP\16F887.BAS        	00014	BANK2   $0110, $016F
; C:\PBP\16F887.BAS        	00015	BANK3   $0190, $01EF
; C:\PBP\16F887.BAS        	00016	EEPROM  $2100, $21FF
; C:\PBP\16F887.BAS        	00017	LIBRARY "PBPPIC14"
; C:\PBP\16F887.BAS        	00018	DEFINE  CODE_SIZE 8

; C:\PBP\16F887.BAS        	00020	        include "PIC14EXT.BAS"

; C:\PBP\16F887.BAS        	00027	        include "PBPPIC14.RAM"

; C:\PBP\16F887.BAS        	00029		ADCON0 = $c0	' Start off with RC
	MOVE?CB	0C0h, ADCON0

; G:\ELE\@BASIC\BOB955~1.PBP	00002	@ __CONFIG _CONFIG1, 0x20C4

	ASM?
 __CONFIG _CONFIG1, 0x20C4

	ENDASM?


; G:\ELE\@BASIC\BOB955~1.PBP	00003	@ __CONFIG _CONFIG2, 0x3FFF

	ASM?
 __CONFIG _CONFIG2, 0x3FFF

	ENDASM?

; G:\ELE\@BASIC\BOB955~1.PBP	00005	DEFINE OSC 8

; G:\ELE\@BASIC\BOB955~1.PBP	00008	OSCCON      = %01110101
	MOVE?CB	075h, OSCCON

; G:\ELE\@BASIC\BOB955~1.PBP	00009	TRISA       = %00000001
	MOVE?CB	001h, TRISA

; G:\ELE\@BASIC\BOB955~1.PBP	00010	TRISB       = %00000001                 
	MOVE?CB	001h, TRISB

; G:\ELE\@BASIC\BOB955~1.PBP	00011	TRISC       = %00000000
	MOVE?CB	000h, TRISC

; G:\ELE\@BASIC\BOB955~1.PBP	00012	TRISD       = %00000000
	MOVE?CB	000h, TRISD

; G:\ELE\@BASIC\BOB955~1.PBP	00013	TRISE       = %00000000                 
	MOVE?CB	000h, TRISE

; G:\ELE\@BASIC\BOB955~1.PBP	00014	OPTION_REG  = %10000000        
	MOVE?CB	080h, OPTION_REG

; G:\ELE\@BASIC\BOB955~1.PBP	00015	INTCON      = %11000000	
	MOVE?CB	0C0h, INTCON

; G:\ELE\@BASIC\BOB955~1.PBP	00016	IOCB        = %00000000
	MOVE?CB	000h, IOCB

; G:\ELE\@BASIC\BOB955~1.PBP	00017	PIE1        = %00000000 ; .0 ES EL TIMER1, .2 ES EL CCP1
	MOVE?CB	000h, PIE1

; G:\ELE\@BASIC\BOB955~1.PBP	00018	PIE2        = %00000000
	MOVE?CB	000h, PIE2

; G:\ELE\@BASIC\BOB955~1.PBP	00019	PIR1        = %00000000
	MOVE?CB	000h, PIR1

; G:\ELE\@BASIC\BOB955~1.PBP	00020	PIR2        = %00000000
	MOVE?CB	000h, PIR2

; G:\ELE\@BASIC\BOB955~1.PBP	00021	IOCB        = %00000001
	MOVE?CB	001h, IOCB

; G:\ELE\@BASIC\BOB955~1.PBP	00022	ANSEL       = %00000001
	MOVE?CB	001h, ANSEL

; G:\ELE\@BASIC\BOB955~1.PBP	00023	ANSELH      = %00000000
	MOVE?CB	000h, ANSELH

; G:\ELE\@BASIC\BOB955~1.PBP	00024	ADCON0      = %10000001
	MOVE?CB	081h, ADCON0

; G:\ELE\@BASIC\BOB955~1.PBP	00025	ADCON1      = %10000000
	MOVE?CB	080h, ADCON1

; G:\ELE\@BASIC\BOB955~1.PBP	00026	CM1CON0     = %00000000
	MOVE?CB	000h, CM1CON0

; G:\ELE\@BASIC\BOB955~1.PBP	00027	CM2CON0     = %00000000
	MOVE?CB	000h, CM2CON0

; G:\ELE\@BASIC\BOB955~1.PBP	00028	SRCON       = %00000000
	MOVE?CB	000h, SRCON

; G:\ELE\@BASIC\BOB955~1.PBP	00029	CCP1CON     = %00000000 ; 00001100 pwm
	MOVE?CB	000h, CCP1CON

; G:\ELE\@BASIC\BOB955~1.PBP	00030	CCP2CON     = %00000000
	MOVE?CB	000h, CCP2CON

; G:\ELE\@BASIC\BOB955~1.PBP	00031	T1CON       = %00000000
	MOVE?CB	000h, T1CON

; G:\ELE\@BASIC\BOB955~1.PBP	00034	on interrupt goto interrupcion
	ONINT?LL	_interrupcion, L00001
; G:\ELE\@BASIC\BOB955~1.PBP	00037	DEFINE  LCD_DREG        PORTD
; G:\ELE\@BASIC\BOB955~1.PBP	00038	DEFINE  LCD_DBIT        4
; G:\ELE\@BASIC\BOB955~1.PBP	00039	DEFINE  LCD_BITS        4
; G:\ELE\@BASIC\BOB955~1.PBP	00040	DEFINE  LCD_RSREG       PORTC
; G:\ELE\@BASIC\BOB955~1.PBP	00041	DEFINE  LCD_RSBIT       6
; G:\ELE\@BASIC\BOB955~1.PBP	00042	DEFINE  LCD_EREG        PORTC
; G:\ELE\@BASIC\BOB955~1.PBP	00043	DEFINE  LCD_EBIT        7
; G:\ELE\@BASIC\BOB955~1.PBP	00044	DEFINE  LCD_LINES       4
; G:\ELE\@BASIC\BOB955~1.PBP	00045	DEFINE  LCD_COMMANDUS   2000  
; G:\ELE\@BASIC\BOB955~1.PBP	00046	DEFINE  LCD_DATAUS      50

; G:\ELE\@BASIC\BOB955~1.PBP	00049	LCDOUT $FE,64,$4,$2,$1F,$12,$14,$10,$10,$0
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	040h
	LCDOUT?C	004h
	LCDOUT?C	002h
	LCDOUT?C	01Fh
	LCDOUT?C	012h
	LCDOUT?C	014h
	LCDOUT?C	010h
	LCDOUT?C	010h
	LCDOUT?C	000h

; G:\ELE\@BASIC\BOB955~1.PBP	00050	LCDOUT $FE,72,$4,$8,$1F,$9,$5,$1,$1,$0
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	048h
	LCDOUT?C	004h
	LCDOUT?C	008h
	LCDOUT?C	01Fh
	LCDOUT?C	009h
	LCDOUT?C	005h
	LCDOUT?C	001h
	LCDOUT?C	001h
	LCDOUT?C	000h

; G:\ELE\@BASIC\BOB955~1.PBP	00051	lcdout $fe,80,$10,$18,$1C,$1E,$1C,$18,$10,$0
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	050h
	LCDOUT?C	010h
	LCDOUT?C	018h
	LCDOUT?C	01Ch
	LCDOUT?C	01Eh
	LCDOUT?C	01Ch
	LCDOUT?C	018h
	LCDOUT?C	010h
	LCDOUT?C	000h

; G:\ELE\@BASIC\BOB955~1.PBP	00052	LCDOUT $fe,88,$0,$1B,$1B,$1B,$1B,$1B,$0,$0
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	058h
	LCDOUT?C	000h
	LCDOUT?C	01Bh
	LCDOUT?C	01Bh
	LCDOUT?C	01Bh
	LCDOUT?C	01Bh
	LCDOUT?C	01Bh
	LCDOUT?C	000h
	LCDOUT?C	000h

; G:\ELE\@BASIC\BOB955~1.PBP	00053	lcdout $fe,96,$11,$19,$1D,$1F,$1D,$19,$11,$0
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	060h
	LCDOUT?C	011h
	LCDOUT?C	019h
	LCDOUT?C	01Dh
	LCDOUT?C	01Fh
	LCDOUT?C	01Dh
	LCDOUT?C	019h
	LCDOUT?C	011h
	LCDOUT?C	000h
; G:\ELE\@BASIC\BOB955~1.PBP	00058	SYMBOL SENTIDO = PORTD.1

; G:\ELE\@BASIC\BOB955~1.PBP	00073	READ 0,VUE_MIC.BYTE0
	ICALL?L	L00001
	READADDRESS?C	000h
	READ?B	_VUE_MIC??BYTE0

; G:\ELE\@BASIC\BOB955~1.PBP	00074	READ 1,VUE_MIC.BYTE1
	ICALL?L	L00001
	READADDRESS?C	001h
	READ?B	_VUE_MIC??BYTE1

; G:\ELE\@BASIC\BOB955~1.PBP	00075	READ 2,VEL_MIC
	ICALL?L	L00001
	READADDRESS?C	002h
	READ?B	_VEL_MIC

; G:\ELE\@BASIC\BOB955~1.PBP	00076	READ 3,RAMPA
	ICALL?L	L00001
	READADDRESS?C	003h
	READ?B	_RAMPA

; G:\ELE\@BASIC\BOB955~1.PBP	00077	READ 4,RETARDO
	ICALL?L	L00001
	READADDRESS?C	004h
	READ?B	_RETARDO

; G:\ELE\@BASIC\BOB955~1.PBP	00078	READ 5,SENTIDO
	ICALL?L	L00001
	READADDRESS?C	005h
	READ?T	_SENTIDO

; G:\ELE\@BASIC\BOB955~1.PBP	00081	PORTA		= 0
	ICALL?L	L00001
	MOVE?CB	000h, PORTA

; G:\ELE\@BASIC\BOB955~1.PBP	00082	PORTB		= 0
	ICALL?L	L00001
	MOVE?CB	000h, PORTB

; G:\ELE\@BASIC\BOB955~1.PBP	00083	PORTC		= 0
	ICALL?L	L00001
	MOVE?CB	000h, PORTC

; G:\ELE\@BASIC\BOB955~1.PBP	00084	PORTD       = 0
	ICALL?L	L00001
	MOVE?CB	000h, PORTD

; G:\ELE\@BASIC\BOB955~1.PBP	00085	PORTE       = 0                                                
	ICALL?L	L00001
	MOVE?CB	000h, PORTE

; G:\ELE\@BASIC\BOB955~1.PBP	00086	CCPR1H      = 0 
	ICALL?L	L00001
	MOVE?CB	000h, CCPR1H

; G:\ELE\@BASIC\BOB955~1.PBP	00087	CCPR1L      = 0
	ICALL?L	L00001
	MOVE?CB	000h, CCPR1L

; G:\ELE\@BASIC\BOB955~1.PBP	00088	VALOR       = 0       
	ICALL?L	L00001
	MOVE?CW	000h, _VALOR

; G:\ELE\@BASIC\BOB955~1.PBP	00089	VUELTAS     = 0        
	ICALL?L	L00001
	MOVE?CW	000h, _VUELTAS

; G:\ELE\@BASIC\BOB955~1.PBP	00091	    PAUSE 100
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\BOB955~1.PBP	00094	TEST:

	LABEL?L	_TEST	

; G:\ELE\@BASIC\BOB955~1.PBP	00095	    IF (SW1 = 0) THEN INICIO
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _INICIO

; G:\ELE\@BASIC\BOB955~1.PBP	00096	    gosub antirrebote 
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00097	    lcdout $FE,1
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	001h

; G:\ELE\@BASIC\BOB955~1.PBP	00098	A:  gosub potenciometro 

	LABEL?L	_A	

; G:\ELE\@BASIC\BOB955~1.PBP	00098	A:  gosub potenciometro 
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00099	    lcdout $FE, $80,dec4 valor,"  ",dec portb.0 
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUTCOUNT?C	004h
	LCDOUTNUM?W	_VALOR
	LCDOUTDEC?	
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUTCOUNT?C	000h
	LCDOUTNUM?T	_PORTB??0
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00100	    IF (SW1 = 0) THEN A    
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _A

; G:\ELE\@BASIC\BOB955~1.PBP	00101	    gosub antirrebote    
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00104	INICIO:

	LABEL?L	_INICIO	

; G:\ELE\@BASIC\BOB955~1.PBP	00105	    lcdout $FE,1
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	001h

; G:\ELE\@BASIC\BOB955~1.PBP	00106	    lcdout $FE,$80,">       ",$fe,$c0,"       <"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	03Eh
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	03Ch

; G:\ELE\@BASIC\BOB955~1.PBP	00107	    pause 100
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\BOB955~1.PBP	00108	    lcdout $FE,$80,"L>      ",$fe,$c0,"      <s"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	04Ch
	LCDOUT?C	03Eh
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	03Ch
	LCDOUT?C	073h

; G:\ELE\@BASIC\BOB955~1.PBP	00109	    pause 100    
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\BOB955~1.PBP	00110	    lcdout $FE,$80,"Lu>     ",$fe,$c0,"     <as"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	04Ch
	LCDOUT?C	075h
	LCDOUT?C	03Eh
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	03Ch
	LCDOUT?C	061h
	LCDOUT?C	073h

; G:\ELE\@BASIC\BOB955~1.PBP	00111	    pause 100    
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\BOB955~1.PBP	00112	    lcdout $FE,$80,"Luc>    ",$fe,$c0,"    <nas"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	04Ch
	LCDOUT?C	075h
	LCDOUT?C	063h
	LCDOUT?C	03Eh
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	03Ch
	LCDOUT?C	06Eh
	LCDOUT?C	061h
	LCDOUT?C	073h

; G:\ELE\@BASIC\BOB955~1.PBP	00113	    pause 100    
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\BOB955~1.PBP	00114	    lcdout $FE,$80,"Luca>   ",$fe,$c0,"   <inas"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	04Ch
	LCDOUT?C	075h
	LCDOUT?C	063h
	LCDOUT?C	061h
	LCDOUT?C	03Eh
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	03Ch
	LCDOUT?C	069h
	LCDOUT?C	06Eh
	LCDOUT?C	061h
	LCDOUT?C	073h

; G:\ELE\@BASIC\BOB955~1.PBP	00115	    pause 100    
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\BOB955~1.PBP	00116	    lcdout $FE,$80,"Lucas>  ",$fe,$c0,"  <binas"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	04Ch
	LCDOUT?C	075h
	LCDOUT?C	063h
	LCDOUT?C	061h
	LCDOUT?C	073h
	LCDOUT?C	03Eh
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	03Ch
	LCDOUT?C	062h
	LCDOUT?C	069h
	LCDOUT?C	06Eh
	LCDOUT?C	061h
	LCDOUT?C	073h

; G:\ELE\@BASIC\BOB955~1.PBP	00117	    pause 100    
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\BOB955~1.PBP	00118	    lcdout $FE,$80,"Lucas > ",$fe,$c0," <obinas"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	04Ch
	LCDOUT?C	075h
	LCDOUT?C	063h
	LCDOUT?C	061h
	LCDOUT?C	073h
	LCDOUT?C	020h
	LCDOUT?C	03Eh
	LCDOUT?C	020h
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	020h
	LCDOUT?C	03Ch
	LCDOUT?C	06Fh
	LCDOUT?C	062h
	LCDOUT?C	069h
	LCDOUT?C	06Eh
	LCDOUT?C	061h
	LCDOUT?C	073h

; G:\ELE\@BASIC\BOB955~1.PBP	00119	    pause 100                
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\BOB955~1.PBP	00120	    lcdout $FE,$80,"Lucas  >",$fe,$c0,"<Bobinas"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	04Ch
	LCDOUT?C	075h
	LCDOUT?C	063h
	LCDOUT?C	061h
	LCDOUT?C	073h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	03Eh
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	03Ch
	LCDOUT?C	042h
	LCDOUT?C	06Fh
	LCDOUT?C	062h
	LCDOUT?C	069h
	LCDOUT?C	06Eh
	LCDOUT?C	061h
	LCDOUT?C	073h

; G:\ELE\@BASIC\BOB955~1.PBP	00121	    pause 100    
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\BOB955~1.PBP	00122	    lcdout $FE,$80,"Lucas   ",$fe,$c0," Bobinas"    
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	04Ch
	LCDOUT?C	075h
	LCDOUT?C	063h
	LCDOUT?C	061h
	LCDOUT?C	073h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	020h
	LCDOUT?C	042h
	LCDOUT?C	06Fh
	LCDOUT?C	062h
	LCDOUT?C	069h
	LCDOUT?C	06Eh
	LCDOUT?C	061h
	LCDOUT?C	073h

; G:\ELE\@BASIC\BOB955~1.PBP	00123	    pause 1000
	ICALL?L	L00001
	PAUSE?C	003E8h

; G:\ELE\@BASIC\BOB955~1.PBP	00126	MAIN:    

	LABEL?L	_MAIN	

; G:\ELE\@BASIC\BOB955~1.PBP	00127	    lcdout $FE,1 
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	001h

; G:\ELE\@BASIC\BOB955~1.PBP	00128	    lcdout $FE,$C0,"MIC<" 
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	04Dh
	LCDOUT?C	049h
	LCDOUT?C	043h
	LCDOUT?C	03Ch

; G:\ELE\@BASIC\BOB955~1.PBP	00129	A1: gosub potenciometro

	LABEL?L	_A1	

; G:\ELE\@BASIC\BOB955~1.PBP	00129	A1: gosub potenciometro
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00130	    select case valor
	ICALL?L	L00001

; G:\ELE\@BASIC\BOB955~1.PBP	00131	        CASE is < 512
	ICALL?L	L00001
	CMPGE?WCL	_VALOR, 00200h, L00004

; G:\ELE\@BASIC\BOB955~1.PBP	00132	            lcdout $FE,$C0,"MIC"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	04Dh
	LCDOUT?C	049h
	LCDOUT?C	043h

; G:\ELE\@BASIC\BOB955~1.PBP	00133	            IF (SW1 = 1) THEN gosub ANTIRREBOTE : goto MICROFONO
	ICALL?L	L00001
	CMPNE?TCL	_SW1, 001h, L00005
	GOSUB?L	_antirrebote
	GOTO?L	_MICROFONO
	LABEL?L	L00005	

; G:\ELE\@BASIC\BOB955~1.PBP	00134	        CASE else
	ICALL?L	L00001
	GOTO?L	L00003
	LABEL?L	L00004	

; G:\ELE\@BASIC\BOB955~1.PBP	00135	            lcdout $FE,$C0,"BOB"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	042h
	LCDOUT?C	04Fh
	LCDOUT?C	042h

; G:\ELE\@BASIC\BOB955~1.PBP	00136	            IF (SW1 = 1) THEN gosub ANTIRREBOTE : goto BOBINA
	ICALL?L	L00001
	CMPNE?TCL	_SW1, 001h, L00007
	GOSUB?L	_antirrebote
	GOTO?L	_BOBINA
	LABEL?L	L00007	

; G:\ELE\@BASIC\BOB955~1.PBP	00137	        end select
	ICALL?L	L00001
	LABEL?L	L00003	

; G:\ELE\@BASIC\BOB955~1.PBP	00138	    GOTO A1
	ICALL?L	L00001
	GOTO?L	_A1

; G:\ELE\@BASIC\BOB955~1.PBP	00140	MICROFONO:

	LABEL?L	_MICROFONO	

; G:\ELE\@BASIC\BOB955~1.PBP	00141	    lcdout $FE,$C3," >"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C3h
	LCDOUT?C	020h
	LCDOUT?C	03Eh

; G:\ELE\@BASIC\BOB955~1.PBP	00142	S:  gosub POTENCIOMETRO

	LABEL?L	_S	

; G:\ELE\@BASIC\BOB955~1.PBP	00142	S:  gosub POTENCIOMETRO
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00143	    select case valor
	ICALL?L	L00001

; G:\ELE\@BASIC\BOB955~1.PBP	00144	        CASE is < 350
	ICALL?L	L00001
	CMPGE?WCL	_VALOR, 0015Eh, L00011

; G:\ELE\@BASIC\BOB955~1.PBP	00145	            lcdout $FE,$C5,"INI"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C5h
	LCDOUT?C	049h
	LCDOUT?C	04Eh
	LCDOUT?C	049h

; G:\ELE\@BASIC\BOB955~1.PBP	00146	            IF (SW1 = 1) THEN gosub ANTIRREBOTE : goto INI_MIC
	ICALL?L	L00001
	CMPNE?TCL	_SW1, 001h, L00012
	GOSUB?L	_antirrebote
	GOTO?L	_INI_MIC
	LABEL?L	L00012	

; G:\ELE\@BASIC\BOB955~1.PBP	00147	        CASE is < 700
	ICALL?L	L00001
	GOTO?L	L00010
	LABEL?L	L00011	
	CMPGE?WCL	_VALOR, 002BCh, L00014

; G:\ELE\@BASIC\BOB955~1.PBP	00148	            lcdout $FE,$C5,"CFG"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C5h
	LCDOUT?C	043h
	LCDOUT?C	046h
	LCDOUT?C	047h

; G:\ELE\@BASIC\BOB955~1.PBP	00149	            IF (SW1 = 1) THEN gosub ANTIRREBOTE : goto CFG_MIC
	ICALL?L	L00001
	CMPNE?TCL	_SW1, 001h, L00015
	GOSUB?L	_antirrebote
	GOTO?L	_CFG_MIC
	LABEL?L	L00015	

; G:\ELE\@BASIC\BOB955~1.PBP	00150	        CASE ELSE
	ICALL?L	L00001
	GOTO?L	L00010
	LABEL?L	L00014	

; G:\ELE\@BASIC\BOB955~1.PBP	00151	            lcdout $FE,$C5,"VOL"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C5h
	LCDOUT?C	056h
	LCDOUT?C	04Fh
	LCDOUT?C	04Ch

; G:\ELE\@BASIC\BOB955~1.PBP	00152	            IF (SW1 = 1) THEN gosub ANTIRREBOTE : goto MAIN            
	ICALL?L	L00001
	CMPNE?TCL	_SW1, 001h, L00017
	GOSUB?L	_antirrebote
	GOTO?L	_MAIN
	LABEL?L	L00017	

; G:\ELE\@BASIC\BOB955~1.PBP	00153	    end select
	ICALL?L	L00001
	LABEL?L	L00010	

; G:\ELE\@BASIC\BOB955~1.PBP	00154	    GOTO S 
	ICALL?L	L00001
	GOTO?L	_S

; G:\ELE\@BASIC\BOB955~1.PBP	00156	CFG_MIC:

	LABEL?L	_CFG_MIC	

; G:\ELE\@BASIC\BOB955~1.PBP	00157	    ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00158	    lcdout $FE,$C5,"SET",$FE,$80,"VEL: ",dec2 vel_mic,"%"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C5h
	LCDOUT?C	053h
	LCDOUT?C	045h
	LCDOUT?C	054h
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	056h
	LCDOUT?C	045h
	LCDOUT?C	04Ch
	LCDOUT?C	03Ah
	LCDOUT?C	020h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?B	_VEL_MIC
	LCDOUTDEC?	
	LCDOUT?C	025h

; G:\ELE\@BASIC\BOB955~1.PBP	00159	B:  GOSUB POTENCIOMETRO

	LABEL?L	_B	

; G:\ELE\@BASIC\BOB955~1.PBP	00159	B:  GOSUB POTENCIOMETRO
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00160	    IF (ULT_VAL < VALOR - 2)OR(ULT_VAL > VALOR + 2) THEN
	ICALL?L	L00001
	SUB?WCW	_VALOR, 002h, T1
	CMPLT?WWB	_ULT_VAL, T1, T1
	ADD?WCW	_VALOR, 002h, T2
	CMPGT?WWB	_ULT_VAL, T2, T2
	LOR?BBW	T1, T2, T2
	CMPF?WL	T2, L00019

; G:\ELE\@BASIC\BOB955~1.PBP	00161	        ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00162	        vel_MIC = ((((valor/10)*88)/100)+10)
	ICALL?L	L00001
	DIV?WCW	_VALOR, 00Ah, T1
	MUL?WCW	T1, 058h, T1
	DIV?WCW	T1, 064h, T1
	ADD?WCB	T1, 00Ah, _VEL_MIC

; G:\ELE\@BASIC\BOB955~1.PBP	00163	        lcdout $FE,$85,dec2 vel_mic
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	085h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?B	_VEL_MIC
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00164	    ENDIF
	ICALL?L	L00001
	LABEL?L	L00019	

; G:\ELE\@BASIC\BOB955~1.PBP	00165	    IF (SW1 = 0) THEN B
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _B

; G:\ELE\@BASIC\BOB955~1.PBP	00166	    WRITE 2,VEL_MIC
	ICALL?L	L00001
	WRITEADDRESS?C	002h
	WRITE?B	_VEL_MIC

; G:\ELE\@BASIC\BOB955~1.PBP	00167	    gosub ANTIRREBOTE    
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00168	    ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00169	    lcdout $FE,$80,"VUE:",dec4 VUE_MIC
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	056h
	LCDOUT?C	055h
	LCDOUT?C	045h
	LCDOUT?C	03Ah
	LCDOUTCOUNT?C	004h
	LCDOUTNUM?W	_VUE_MIC
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00170	C:  GOSUB POTENCIOMETRO

	LABEL?L	_C	

; G:\ELE\@BASIC\BOB955~1.PBP	00170	C:  GOSUB POTENCIOMETRO
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00171	    IF (ULT_VAL < VALOR - 2)OR(ULT_VAL > VALOR + 2) THEN
	ICALL?L	L00001
	SUB?WCW	_VALOR, 002h, T1
	CMPLT?WWB	_ULT_VAL, T1, T1
	ADD?WCW	_VALOR, 002h, T2
	CMPGT?WWB	_ULT_VAL, T2, T2
	LOR?BBW	T1, T2, T2
	CMPF?WL	T2, L00021

; G:\ELE\@BASIC\BOB955~1.PBP	00172	        ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00173	        VUE_MIC = (valor*10)
	ICALL?L	L00001
	MUL?WCW	_VALOR, 00Ah, _VUE_MIC

; G:\ELE\@BASIC\BOB955~1.PBP	00174	        if VUE_MIC > 9999 then VUE_MIC = 9999
	ICALL?L	L00001
	CMPLE?WCL	_VUE_MIC, 0270Fh, L00023
	MOVE?CW	0270Fh, _VUE_MIC
	LABEL?L	L00023	

; G:\ELE\@BASIC\BOB955~1.PBP	00175	        lcdout $FE,$84,dec4 VUE_MIC
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	084h
	LCDOUTCOUNT?C	004h
	LCDOUTNUM?W	_VUE_MIC
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00176	    ENDIF
	ICALL?L	L00001
	LABEL?L	L00021	

; G:\ELE\@BASIC\BOB955~1.PBP	00177	    IF (SW1 = 0) THEN C
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _C

; G:\ELE\@BASIC\BOB955~1.PBP	00178	    WRITE 0,VUE_MIC.BYTE0
	ICALL?L	L00001
	WRITEADDRESS?C	000h
	WRITE?B	_VUE_MIC??BYTE0

; G:\ELE\@BASIC\BOB955~1.PBP	00179	    WRITE 1,VUE_MIC.BYTE1
	ICALL?L	L00001
	WRITEADDRESS?C	001h
	WRITE?B	_VUE_MIC??BYTE1

; G:\ELE\@BASIC\BOB955~1.PBP	00180	    gosub ANTIRREBOTE
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00182	    ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00183	    lcdout $FE,$80,"RET: ",dec2 retardo,"s "
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	052h
	LCDOUT?C	045h
	LCDOUT?C	054h
	LCDOUT?C	03Ah
	LCDOUT?C	020h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?B	_RETARDO
	LCDOUTDEC?	
	LCDOUT?C	073h
	LCDOUT?C	020h

; G:\ELE\@BASIC\BOB955~1.PBP	00184	D:  GOSUB POTENCIOMETRO

	LABEL?L	_D	

; G:\ELE\@BASIC\BOB955~1.PBP	00184	D:  GOSUB POTENCIOMETRO
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00185	    IF (ULT_VAL < VALOR - 2)OR(ULT_VAL > VALOR + 2) THEN
	ICALL?L	L00001
	SUB?WCW	_VALOR, 002h, T1
	CMPLT?WWB	_ULT_VAL, T1, T1
	ADD?WCW	_VALOR, 002h, T2
	CMPGT?WWB	_ULT_VAL, T2, T2
	LOR?BBW	T1, T2, T2
	CMPF?WL	T2, L00025

; G:\ELE\@BASIC\BOB955~1.PBP	00186	        ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00187	        retardo = valor / 100                
	ICALL?L	L00001
	DIV?WCB	_VALOR, 064h, _RETARDO

; G:\ELE\@BASIC\BOB955~1.PBP	00188	        lcdout $FE,$85,dec2 retardo
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	085h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?B	_RETARDO
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00189	    ENDIF
	ICALL?L	L00001
	LABEL?L	L00025	

; G:\ELE\@BASIC\BOB955~1.PBP	00190	    IF (SW1 = 0) THEN D
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _D

; G:\ELE\@BASIC\BOB955~1.PBP	00191	    WRITE 4,RETARDO
	ICALL?L	L00001
	WRITEADDRESS?C	004h
	WRITE?B	_RETARDO

; G:\ELE\@BASIC\BOB955~1.PBP	00192	    gosub ANTIRREBOTE
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00194	    ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00195	    lcdout $FE,$80,"RAM: ",dec2 rampa,"s "
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	052h
	LCDOUT?C	041h
	LCDOUT?C	04Dh
	LCDOUT?C	03Ah
	LCDOUT?C	020h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?B	_RAMPA
	LCDOUTDEC?	
	LCDOUT?C	073h
	LCDOUT?C	020h

; G:\ELE\@BASIC\BOB955~1.PBP	00196	E:  GOSUB POTENCIOMETRO

	LABEL?L	_E	

; G:\ELE\@BASIC\BOB955~1.PBP	00196	E:  GOSUB POTENCIOMETRO
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00197	    IF (ULT_VAL < VALOR - 2)OR(ULT_VAL > VALOR + 2) THEN
	ICALL?L	L00001
	SUB?WCW	_VALOR, 002h, T1
	CMPLT?WWB	_ULT_VAL, T1, T1
	ADD?WCW	_VALOR, 002h, T2
	CMPGT?WWB	_ULT_VAL, T2, T2
	LOR?BBW	T1, T2, T2
	CMPF?WL	T2, L00027

; G:\ELE\@BASIC\BOB955~1.PBP	00198	        ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00199	        rampa = ((((valor/10)*29)/100)+30)               
	ICALL?L	L00001
	DIV?WCW	_VALOR, 00Ah, T1
	MUL?WCW	T1, 01Dh, T1
	DIV?WCW	T1, 064h, T1
	ADD?WCB	T1, 01Eh, _RAMPA

; G:\ELE\@BASIC\BOB955~1.PBP	00200	        lcdout $FE,$85,dec2 rampa
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	085h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?B	_RAMPA
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00201	    ENDIF
	ICALL?L	L00001
	LABEL?L	L00027	

; G:\ELE\@BASIC\BOB955~1.PBP	00202	    IF (SW1 = 0) THEN E
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _E

; G:\ELE\@BASIC\BOB955~1.PBP	00203	    WRITE 3,RAMPA
	ICALL?L	L00001
	WRITEADDRESS?C	003h
	WRITE?B	_RAMPA

; G:\ELE\@BASIC\BOB955~1.PBP	00204	    gosub ANTIRREBOTE
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00206	    ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00207	    lcdout $FE,$80,"SEN: ",sentido,"  "
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	053h
	LCDOUT?C	045h
	LCDOUT?C	04Eh
	LCDOUT?C	03Ah
	LCDOUT?C	020h
	LCDOUT?T	_SENTIDO
	LCDOUT?C	020h
	LCDOUT?C	020h

; G:\ELE\@BASIC\BOB955~1.PBP	00208	F:  GOSUB POTENCIOMETRO

	LABEL?L	_F	

; G:\ELE\@BASIC\BOB955~1.PBP	00208	F:  GOSUB POTENCIOMETRO
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00209	    IF (ULT_VAL < VALOR - 2)OR(ULT_VAL > VALOR + 2) THEN
	ICALL?L	L00001
	SUB?WCW	_VALOR, 002h, T1
	CMPLT?WWB	_ULT_VAL, T1, T1
	ADD?WCW	_VALOR, 002h, T2
	CMPGT?WWB	_ULT_VAL, T2, T2
	LOR?BBW	T1, T2, T2
	CMPF?WL	T2, L00029

; G:\ELE\@BASIC\BOB955~1.PBP	00210	        ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00211	        sentido = valor/515               
	ICALL?L	L00001
	DIV?WCT	_VALOR, 00203h, _SENTIDO

; G:\ELE\@BASIC\BOB955~1.PBP	00212	        lcdout $FE,$85,sentido
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	085h
	LCDOUT?T	_SENTIDO

; G:\ELE\@BASIC\BOB955~1.PBP	00213	    ENDIF
	ICALL?L	L00001
	LABEL?L	L00029	

; G:\ELE\@BASIC\BOB955~1.PBP	00214	    IF (SW1 = 0) THEN F
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _F

; G:\ELE\@BASIC\BOB955~1.PBP	00215	    WRITE 5,SENTIDO
	ICALL?L	L00001
	WRITEADDRESS?C	005h
	WRITE?T	_SENTIDO

; G:\ELE\@BASIC\BOB955~1.PBP	00216	    gosub ANTIRREBOTE
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00217	    lcdout $FE,$80,"        "    
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	020h

; G:\ELE\@BASIC\BOB955~1.PBP	00218	    goto MICROFONO    
	ICALL?L	L00001
	GOTO?L	_MICROFONO

; G:\ELE\@BASIC\BOB955~1.PBP	00221	INI_MIC:

	LABEL?L	_INI_MIC	

; G:\ELE\@BASIC\BOB955~1.PBP	00222	    VUELTAS = 0
	ICALL?L	L00001
	MOVE?CW	000h, _VUELTAS

; G:\ELE\@BASIC\BOB955~1.PBP	00223	    READ 4,RETARDO 
	ICALL?L	L00001
	READADDRESS?C	004h
	READ?B	_RETARDO

; G:\ELE\@BASIC\BOB955~1.PBP	00224	    lcdout $FE,$80,dec2 vel_mic,"% ",DEC4 VUELTAS,$fe,$c4,dec4 VUE_MIC
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?B	_VEL_MIC
	LCDOUTDEC?	
	LCDOUT?C	025h
	LCDOUT?C	020h
	LCDOUTCOUNT?C	004h
	LCDOUTNUM?W	_VUELTAS
	LCDOUTDEC?	
	LCDOUT?C	0FEh
	LCDOUT?C	0C4h
	LCDOUTCOUNT?C	004h
	LCDOUTNUM?W	_VUE_MIC
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00225	    PAUSE 500                       
	ICALL?L	L00001
	PAUSE?C	001F4h

; G:\ELE\@BASIC\BOB955~1.PBP	00226	G:  if RETARDO = 0 then H 

	LABEL?L	_G	

; G:\ELE\@BASIC\BOB955~1.PBP	00226	G:  if RETARDO = 0 then H 
	ICALL?L	L00001
	CMPEQ?BCL	_RETARDO, 000h, _H

; G:\ELE\@BASIC\BOB955~1.PBP	00227	    lcdout $FE,$C0,"(",dec RETARDO,")"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	028h
	LCDOUTCOUNT?C	000h
	LCDOUTNUM?B	_RETARDO
	LCDOUTDEC?	
	LCDOUT?C	029h

; G:\ELE\@BASIC\BOB955~1.PBP	00228	    pause 1000    
	ICALL?L	L00001
	PAUSE?C	003E8h

; G:\ELE\@BASIC\BOB955~1.PBP	00229	    RETARDO = retardo - 1
	ICALL?L	L00001
	SUB?BCB	_RETARDO, 001h, _RETARDO

; G:\ELE\@BASIC\BOB955~1.PBP	00230	    goto G   
	ICALL?L	L00001
	GOTO?L	_G

; G:\ELE\@BASIC\BOB955~1.PBP	00231	H:  lcdout $FE,$C0,"MIC"     

	LABEL?L	_H	

; G:\ELE\@BASIC\BOB955~1.PBP	00231	H:  lcdout $FE,$C0,"MIC"     
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	04Dh
	LCDOUT?C	049h
	LCDOUT?C	043h

; G:\ELE\@BASIC\BOB955~1.PBP	00232	    GOSUB SUBE
	ICALL?L	L00001
	GOSUB?L	_SUBE

; G:\ELE\@BASIC\BOB955~1.PBP	00233	    contador = 500    
	ICALL?L	L00001
	MOVE?CW	001F4h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00234	I:  if contador < ((VEL_MIC * 10) + 500) then

	LABEL?L	_I	

; G:\ELE\@BASIC\BOB955~1.PBP	00234	I:  if contador < ((VEL_MIC * 10) + 500) then
	ICALL?L	L00001
	MUL?BCW	_VEL_MIC, 00Ah, T1
	ADD?WCW	T1, 001F4h, T1
	CMPGE?WWL	_CONTADOR, T1, L00031

; G:\ELE\@BASIC\BOB955~1.PBP	00235	        contador = contador + 1
	ICALL?L	L00001
	ADD?WCW	_CONTADOR, 001h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00236	        HPWM 1,127,contador
	ICALL?L	L00001
	HPWM?CCW	001h, 07Fh, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00237	        pause (rampa-26)
	ICALL?L	L00001
	SUB?BCW	_RAMPA, 01Ah, T1
	PAUSE?W	T1

; G:\ELE\@BASIC\BOB955~1.PBP	00238	        goto I
	ICALL?L	L00001
	GOTO?L	_I

; G:\ELE\@BASIC\BOB955~1.PBP	00239	    endif
	ICALL?L	L00001
	LABEL?L	L00031	

; G:\ELE\@BASIC\BOB955~1.PBP	00240	    GOSUB POTENCIOMETRO
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00241	    ULT_VAL = VALOR             
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00242	J:  gosub potenciometro

	LABEL?L	_J	

; G:\ELE\@BASIC\BOB955~1.PBP	00242	J:  gosub potenciometro
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00243	    IF (ULT_VAL < VALOR - 2)OR(ULT_VAL > VALOR + 2) THEN
	ICALL?L	L00001
	SUB?WCW	_VALOR, 002h, T1
	CMPLT?WWB	_ULT_VAL, T1, T1
	ADD?WCW	_VALOR, 002h, T2
	CMPGT?WWB	_ULT_VAL, T2, T2
	LOR?BBW	T1, T2, T2
	CMPF?WL	T2, L00033

; G:\ELE\@BASIC\BOB955~1.PBP	00244	        ULT_VAL = VALOR
	ICALL?L	L00001
	MOVE?WW	_VALOR, _ULT_VAL

; G:\ELE\@BASIC\BOB955~1.PBP	00245	        CONTADOR = (((VALOR/10)*10)+500)
	ICALL?L	L00001
	DIV?WCW	_VALOR, 00Ah, T1
	MUL?WCW	T1, 00Ah, T1
	ADD?WCW	T1, 001F4h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00246	        HPWM 1,127,CONTADOR
	ICALL?L	L00001
	HPWM?CCW	001h, 07Fh, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00247	        pause 10
	ICALL?L	L00001
	PAUSE?C	00Ah

; G:\ELE\@BASIC\BOB955~1.PBP	00248	        VALOR = ((((valor/10)*88)/100)+10)              
	ICALL?L	L00001
	DIV?WCW	_VALOR, 00Ah, T1
	MUL?WCW	T1, 058h, T1
	DIV?WCW	T1, 064h, T1
	ADD?WCW	T1, 00Ah, _VALOR

; G:\ELE\@BASIC\BOB955~1.PBP	00249	        lcdout $FE,$80,dec2 VALOR,"%"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?W	_VALOR
	LCDOUTDEC?	
	LCDOUT?C	025h

; G:\ELE\@BASIC\BOB955~1.PBP	00250	    ENDIF        
	ICALL?L	L00001
	LABEL?L	L00033	

; G:\ELE\@BASIC\BOB955~1.PBP	00251	    if (vueLTAS = VUE_MIC - 5) THEN 
	ICALL?L	L00001
	SUB?WCW	_VUE_MIC, 005h, T1
	CMPNE?WWL	_VUELTAS, T1, L00035

; G:\ELE\@BASIC\BOB955~1.PBP	00252	        GOSUB BAJA
	ICALL?L	L00001
	GOSUB?L	_BAJA

; G:\ELE\@BASIC\BOB955~1.PBP	00253	        GOTO K
	ICALL?L	L00001
	GOTO?L	_K

; G:\ELE\@BASIC\BOB955~1.PBP	00254	    ENDIF
	ICALL?L	L00001
	LABEL?L	L00035	

; G:\ELE\@BASIC\BOB955~1.PBP	00255	    IF(SW1 = 0) THEN J 
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _J

; G:\ELE\@BASIC\BOB955~1.PBP	00256	    gosub ANTIRREBOTE
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00257	PAUSA:

	LABEL?L	_PAUSA	

; G:\ELE\@BASIC\BOB955~1.PBP	00258	    lcdout $FE,$C0,"(",3,")"             
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	028h
	LCDOUT?C	003h
	LCDOUT?C	029h

; G:\ELE\@BASIC\BOB955~1.PBP	00259	    GOSUB BAJA
	ICALL?L	L00001
	GOSUB?L	_BAJA

; G:\ELE\@BASIC\BOB955~1.PBP	00260	T:  GOSUB POTENCIOMETRO

	LABEL?L	_T	

; G:\ELE\@BASIC\BOB955~1.PBP	00260	T:  GOSUB POTENCIOMETRO
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00261	    SELECT CASE VALOR
	ICALL?L	L00001

; G:\ELE\@BASIC\BOB955~1.PBP	00262	        CASE IS < 512
	ICALL?L	L00001
	CMPGE?WCL	_VALOR, 00200h, L00039

; G:\ELE\@BASIC\BOB955~1.PBP	00263	            lcdout $FE,$C1,2
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C1h
	LCDOUT?C	002h

; G:\ELE\@BASIC\BOB955~1.PBP	00264	            IF (SW1 = 1) THEN GOSUB ANTIRREBOTE : GOTO H
	ICALL?L	L00001
	CMPNE?TCL	_SW1, 001h, L00040
	GOSUB?L	_antirrebote
	GOTO?L	_H
	LABEL?L	L00040	

; G:\ELE\@BASIC\BOB955~1.PBP	00265	        CASE ELSE
	ICALL?L	L00001
	GOTO?L	L00038
	LABEL?L	L00039	

; G:\ELE\@BASIC\BOB955~1.PBP	00266	            lcdout $FE,$C1,4
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C1h
	LCDOUT?C	004h

; G:\ELE\@BASIC\BOB955~1.PBP	00267	            IF (SW1 = 1) THEN GOSUB ANTIRREBOTE : GOTO K
	ICALL?L	L00001
	CMPNE?TCL	_SW1, 001h, L00042
	GOSUB?L	_antirrebote
	GOTO?L	_K
	LABEL?L	L00042	

; G:\ELE\@BASIC\BOB955~1.PBP	00268	    END SELECT
	ICALL?L	L00001
	LABEL?L	L00038	

; G:\ELE\@BASIC\BOB955~1.PBP	00269	    GOTO T   
	ICALL?L	L00001
	GOTO?L	_T

; G:\ELE\@BASIC\BOB955~1.PBP	00270	K:  

	LABEL?L	_K	

; G:\ELE\@BASIC\BOB955~1.PBP	00271	    gosub buzzer
	ICALL?L	L00001
	GOSUB?L	_buzzer

; G:\ELE\@BASIC\BOB955~1.PBP	00272	    pause 2000
	ICALL?L	L00001
	PAUSE?C	007D0h

; G:\ELE\@BASIC\BOB955~1.PBP	00273	    lcdout $FE,$80,"RETIRAR ",$FE,$C0,"  BOBINA"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	052h
	LCDOUT?C	045h
	LCDOUT?C	054h
	LCDOUT?C	049h
	LCDOUT?C	052h
	LCDOUT?C	041h
	LCDOUT?C	052h
	LCDOUT?C	020h
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	020h
	LCDOUT?C	020h
	LCDOUT?C	042h
	LCDOUT?C	04Fh
	LCDOUT?C	042h
	LCDOUT?C	049h
	LCDOUT?C	04Eh
	LCDOUT?C	041h

; G:\ELE\@BASIC\BOB955~1.PBP	00274	L:  IF SW1 = 0 THEN L

	LABEL?L	_L	

; G:\ELE\@BASIC\BOB955~1.PBP	00274	L:  IF SW1 = 0 THEN L
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _L

; G:\ELE\@BASIC\BOB955~1.PBP	00275	    GOSUB ANTIRREBOTE        
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00276	    goto MAIN               
	ICALL?L	L00001
	GOTO?L	_MAIN

; G:\ELE\@BASIC\BOB955~1.PBP	00280	BOBINA:

	LABEL?L	_BOBINA	

; G:\ELE\@BASIC\BOB955~1.PBP	00281	    lcdout $FE,1 
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	001h

; G:\ELE\@BASIC\BOB955~1.PBP	00282	    lcdout $FE,$80,"00% 0000",$FE,$C0,"BOB >INI"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	030h
	LCDOUT?C	030h
	LCDOUT?C	025h
	LCDOUT?C	020h
	LCDOUT?C	030h
	LCDOUT?C	030h
	LCDOUT?C	030h
	LCDOUT?C	030h
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	042h
	LCDOUT?C	04Fh
	LCDOUT?C	042h
	LCDOUT?C	020h
	LCDOUT?C	03Eh
	LCDOUT?C	049h
	LCDOUT?C	04Eh
	LCDOUT?C	049h

; G:\ELE\@BASIC\BOB955~1.PBP	00283	M:  gosub potenciometro

	LABEL?L	_M	

; G:\ELE\@BASIC\BOB955~1.PBP	00283	M:  gosub potenciometro
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00284	    vel_bob = (((valor/10)*97)/100)
	ICALL?L	L00001
	DIV?WCW	_VALOR, 00Ah, T1
	MUL?WCW	T1, 061h, T1
	DIV?WCW	T1, 064h, _VEL_BOB

; G:\ELE\@BASIC\BOB955~1.PBP	00285	    lcdout $FE,$80,dec2 vel_bob
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?W	_VEL_BOB
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00286	    IF (SW1 = 0) THEN M
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _M

; G:\ELE\@BASIC\BOB955~1.PBP	00287	    gosub ANTIRREBOTE
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00288	    vel_bob = valor * 20
	ICALL?L	L00001
	MUL?WCW	_VALOR, 014h, _VEL_BOB

; G:\ELE\@BASIC\BOB955~1.PBP	00289	    if vel_bob < 1000 then vel_bob = 1000    
	ICALL?L	L00001
	CMPGE?WCL	_VEL_BOB, 003E8h, L00044
	MOVE?CW	003E8h, _VEL_BOB
	LABEL?L	L00044	

; G:\ELE\@BASIC\BOB955~1.PBP	00290	N:  gosub potenciometro

	LABEL?L	_N	

; G:\ELE\@BASIC\BOB955~1.PBP	00290	N:  gosub potenciometro
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00291	    vue_bob = valor / 10
	ICALL?L	L00001
	DIV?WCB	_VALOR, 00Ah, _VUE_BOB

; G:\ELE\@BASIC\BOB955~1.PBP	00292	    lcdout $FE,$84,dec4 vue_bob
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	084h
	LCDOUTCOUNT?C	004h
	LCDOUTNUM?B	_VUE_BOB
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00293	    IF (SW1 = 0) THEN N
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _N

; G:\ELE\@BASIC\BOB955~1.PBP	00294	    gosub ANTIRREBOTE
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00295	O:  GOSUB POTENCIOMETRO

	LABEL?L	_O	

; G:\ELE\@BASIC\BOB955~1.PBP	00295	O:  GOSUB POTENCIOMETRO
	ICALL?L	L00001
	GOSUB?L	_potenciometro

; G:\ELE\@BASIC\BOB955~1.PBP	00296	    select case valor
	ICALL?L	L00001

; G:\ELE\@BASIC\BOB955~1.PBP	00297	        CASE is < 500
	ICALL?L	L00001
	CMPGE?WCL	_VALOR, 001F4h, L00048

; G:\ELE\@BASIC\BOB955~1.PBP	00298	            lcdout $FE,$C5,"INI"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C5h
	LCDOUT?C	049h
	LCDOUT?C	04Eh
	LCDOUT?C	049h

; G:\ELE\@BASIC\BOB955~1.PBP	00299	            IF (SW1 = 1) THEN gosub ANTIRREBOTE : READ 4,RETARDO : goto INI_BOB
	ICALL?L	L00001
	CMPNE?TCL	_SW1, 001h, L00049
	GOSUB?L	_antirrebote
	READADDRESS?C	004h
	READ?B	_RETARDO
	GOTO?L	_INI_BOB
	LABEL?L	L00049	

; G:\ELE\@BASIC\BOB955~1.PBP	00300	        CASE ELSE
	ICALL?L	L00001
	GOTO?L	L00047
	LABEL?L	L00048	

; G:\ELE\@BASIC\BOB955~1.PBP	00301	            lcdout $FE,$C5,"VOL"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C5h
	LCDOUT?C	056h
	LCDOUT?C	04Fh
	LCDOUT?C	04Ch

; G:\ELE\@BASIC\BOB955~1.PBP	00302	            IF (SW1 = 1) THEN gosub ANTIRREBOTE : goto MAIN            
	ICALL?L	L00001
	CMPNE?TCL	_SW1, 001h, L00051
	GOSUB?L	_antirrebote
	GOTO?L	_MAIN
	LABEL?L	L00051	

; G:\ELE\@BASIC\BOB955~1.PBP	00303	    end select
	ICALL?L	L00001
	LABEL?L	L00047	

; G:\ELE\@BASIC\BOB955~1.PBP	00304	    goto O
	ICALL?L	L00001
	GOTO?L	_O

; G:\ELE\@BASIC\BOB955~1.PBP	00306	INI_BOB:

	LABEL?L	_INI_BOB	

; G:\ELE\@BASIC\BOB955~1.PBP	00307	    if RETARDO = 0 then P 
	ICALL?L	L00001
	CMPEQ?BCL	_RETARDO, 000h, _P

; G:\ELE\@BASIC\BOB955~1.PBP	00308	    lcdout $FE,$C0,"(",dec RETARDO,")"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	028h
	LCDOUTCOUNT?C	000h
	LCDOUTNUM?B	_RETARDO
	LCDOUTDEC?	
	LCDOUT?C	029h

; G:\ELE\@BASIC\BOB955~1.PBP	00309	    pause 1000    
	ICALL?L	L00001
	PAUSE?C	003E8h

; G:\ELE\@BASIC\BOB955~1.PBP	00310	    RETARDO = retardo - 1
	ICALL?L	L00001
	SUB?BCB	_RETARDO, 001h, _RETARDO

; G:\ELE\@BASIC\BOB955~1.PBP	00311	    goto INI_BOB
	ICALL?L	L00001
	GOTO?L	_INI_BOB

; G:\ELE\@BASIC\BOB955~1.PBP	00312	P:  lcdout $FE,$C0,"BOB >FIN"

	LABEL?L	_P	

; G:\ELE\@BASIC\BOB955~1.PBP	00312	P:  lcdout $FE,$C0,"BOB >FIN"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	042h
	LCDOUT?C	04Fh
	LCDOUT?C	042h
	LCDOUT?C	020h
	LCDOUT?C	03Eh
	LCDOUT?C	046h
	LCDOUT?C	049h
	LCDOUT?C	04Eh

; G:\ELE\@BASIC\BOB955~1.PBP	00313	    CCP1CON = %00000000
	ICALL?L	L00001
	MOVE?CB	000h, CCP1CON

; G:\ELE\@BASIC\BOB955~1.PBP	00314	    INTCON.4 = 0    
	ICALL?L	L00001
	MOVE?CT	000h, _INTCON??4

; G:\ELE\@BASIC\BOB955~1.PBP	00315	    aux = 0             
	ICALL?L	L00001
	MOVE?CB	000h, _AUX

; G:\ELE\@BASIC\BOB955~1.PBP	00316	    CONTADOR = 20000  
	ICALL?L	L00001
	MOVE?CW	04E20h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00317	Q: TOGGLE PORTC.2

	LABEL?L	_Q	

; G:\ELE\@BASIC\BOB955~1.PBP	00317	Q: TOGGLE PORTC.2
	ICALL?L	L00001
	TOGGLE?T	_PORTC??2

; G:\ELE\@BASIC\BOB955~1.PBP	00318	    PAUSEUS CONTADOR
	ICALL?L	L00001
	PAUSEUS?W	_CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00319	    if contador > vel_bob THEN
	ICALL?L	L00001
	CMPLE?WWL	_CONTADOR, _VEL_BOB, L00053

; G:\ELE\@BASIC\BOB955~1.PBP	00320	        contador = contador - 2
	ICALL?L	L00001
	SUB?WCW	_CONTADOR, 002h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00321	        if contador > 5000 then 
	ICALL?L	L00001
	CMPLE?WCL	_CONTADOR, 01388h, L00055

; G:\ELE\@BASIC\BOB955~1.PBP	00322	            contador = contador - 10
	ICALL?L	L00001
	SUB?WCW	_CONTADOR, 00Ah, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00323	            if contador > 10000 then contador = contador - 50
	ICALL?L	L00001
	CMPLE?WCL	_CONTADOR, 02710h, L00057
	SUB?WCW	_CONTADOR, 032h, _CONTADOR
	LABEL?L	L00057	

; G:\ELE\@BASIC\BOB955~1.PBP	00324	        ENDIF
	ICALL?L	L00001
	LABEL?L	L00055	

; G:\ELE\@BASIC\BOB955~1.PBP	00325	    ENDIF
	ICALL?L	L00001
	LABEL?L	L00053	

; G:\ELE\@BASIC\BOB955~1.PBP	00326	    if portc.2 = 1 then aux = aux + 1
	ICALL?L	L00001
	CMPNE?TCL	_PORTC??2, 001h, L00059
	ADD?BCB	_AUX, 001h, _AUX
	LABEL?L	L00059	

; G:\ELE\@BASIC\BOB955~1.PBP	00327	    if aux = 200 then vue_bob = vue_bob - 1 : aux = 0
	ICALL?L	L00001
	CMPNE?BCL	_AUX, 0C8h, L00061
	SUB?BCB	_VUE_BOB, 001h, _VUE_BOB
	MOVE?CB	000h, _AUX
	LABEL?L	L00061	

; G:\ELE\@BASIC\BOB955~1.PBP	00328	    if vue_bob = 0 then R    
	ICALL?L	L00001
	CMPEQ?BCL	_VUE_BOB, 000h, _R

; G:\ELE\@BASIC\BOB955~1.PBP	00329	    IF (SW1 = 0) THEN Q           
	ICALL?L	L00001
	CMPEQ?TCL	_SW1, 000h, _Q

; G:\ELE\@BASIC\BOB955~1.PBP	00330	R:  TOGGLE PORTC.2

	LABEL?L	_R	

; G:\ELE\@BASIC\BOB955~1.PBP	00330	R:  TOGGLE PORTC.2
	ICALL?L	L00001
	TOGGLE?T	_PORTC??2

; G:\ELE\@BASIC\BOB955~1.PBP	00331	    PAUSEUS CONTADOR     
	ICALL?L	L00001
	PAUSEUS?W	_CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00332	    contador = contador + 1
	ICALL?L	L00001
	ADD?WCW	_CONTADOR, 001h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00333	    if contador > 2500 then 
	ICALL?L	L00001
	CMPLE?WCL	_CONTADOR, 009C4h, L00063

; G:\ELE\@BASIC\BOB955~1.PBP	00334	        contador = contador + 10
	ICALL?L	L00001
	ADD?WCW	_CONTADOR, 00Ah, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00335	        if contador => 10000 then 
	ICALL?L	L00001
	CMPLT?WCL	_CONTADOR, 02710h, L00065

; G:\ELE\@BASIC\BOB955~1.PBP	00336	            gosub ANTIRREBOTE
	ICALL?L	L00001
	GOSUB?L	_antirrebote

; G:\ELE\@BASIC\BOB955~1.PBP	00337	            lcdout $fe,$c0,"FINALIZO"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	046h
	LCDOUT?C	049h
	LCDOUT?C	04Eh
	LCDOUT?C	041h
	LCDOUT?C	04Ch
	LCDOUT?C	049h
	LCDOUT?C	05Ah
	LCDOUT?C	04Fh

; G:\ELE\@BASIC\BOB955~1.PBP	00338	            pause 2000            
	ICALL?L	L00001
	PAUSE?C	007D0h

; G:\ELE\@BASIC\BOB955~1.PBP	00339	            goto BOBINA
	ICALL?L	L00001
	GOTO?L	_BOBINA

; G:\ELE\@BASIC\BOB955~1.PBP	00340	        endif                       
	ICALL?L	L00001
	LABEL?L	L00065	

; G:\ELE\@BASIC\BOB955~1.PBP	00341	    ENDIF            
	ICALL?L	L00001
	LABEL?L	L00063	

; G:\ELE\@BASIC\BOB955~1.PBP	00342	    goto R                                                            
	ICALL?L	L00001
	GOTO?L	_R

; G:\ELE\@BASIC\BOB955~1.PBP	00349	SUBE:

	LABEL?L	_SUBE	

; G:\ELE\@BASIC\BOB955~1.PBP	00350	    CCP1CON = %00000000 
	ICALL?L	L00001
	MOVE?CB	000h, CCP1CON

; G:\ELE\@BASIC\BOB955~1.PBP	00351	    CONTADOR = 15000  
	ICALL?L	L00001
	MOVE?CW	03A98h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00352	Y1: TOGGLE PORTC.2

	LABEL?L	_Y1	

; G:\ELE\@BASIC\BOB955~1.PBP	00352	Y1: TOGGLE PORTC.2
	ICALL?L	L00001
	TOGGLE?T	_PORTC??2

; G:\ELE\@BASIC\BOB955~1.PBP	00353	    PAUSEUS CONTADOR
	ICALL?L	L00001
	PAUSEUS?W	_CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00354	    if contador > 1000 THEN
	ICALL?L	L00001
	CMPLE?WCL	_CONTADOR, 003E8h, L00067

; G:\ELE\@BASIC\BOB955~1.PBP	00355	        contador = contador - 2
	ICALL?L	L00001
	SUB?WCW	_CONTADOR, 002h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00356	        if contador > 5000 then 
	ICALL?L	L00001
	CMPLE?WCL	_CONTADOR, 01388h, L00069

; G:\ELE\@BASIC\BOB955~1.PBP	00357	            contador = contador - 10
	ICALL?L	L00001
	SUB?WCW	_CONTADOR, 00Ah, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00358	            if contador > 10000 then contador = contador - 50
	ICALL?L	L00001
	CMPLE?WCL	_CONTADOR, 02710h, L00071
	SUB?WCW	_CONTADOR, 032h, _CONTADOR
	LABEL?L	L00071	

; G:\ELE\@BASIC\BOB955~1.PBP	00359	        ENDIF
	ICALL?L	L00001
	LABEL?L	L00069	

; G:\ELE\@BASIC\BOB955~1.PBP	00360	        GOTO Y1
	ICALL?L	L00001
	GOTO?L	_Y1

; G:\ELE\@BASIC\BOB955~1.PBP	00361	    ENDIF    
	ICALL?L	L00001
	LABEL?L	L00067	

; G:\ELE\@BASIC\BOB955~1.PBP	00362	    CCP1CON = %00001100
	ICALL?L	L00001
	MOVE?CB	00Ch, CCP1CON

; G:\ELE\@BASIC\BOB955~1.PBP	00363	    VUELTAS = VUELTAS + 5
	ICALL?L	L00001
	ADD?WCW	_VUELTAS, 005h, _VUELTAS

; G:\ELE\@BASIC\BOB955~1.PBP	00364	    INTCON.4 = 1
	ICALL?L	L00001
	MOVE?CT	001h, _INTCON??4

; G:\ELE\@BASIC\BOB955~1.PBP	00365	    hpwm 1,127,500     
	ICALL?L	L00001
	HPWM?CCC	001h, 07Fh, 001F4h

; G:\ELE\@BASIC\BOB955~1.PBP	00366	    return
	ICALL?L	L00001
	RETURN?	

; G:\ELE\@BASIC\BOB955~1.PBP	00369	BAJA:

	LABEL?L	_BAJA	

; G:\ELE\@BASIC\BOB955~1.PBP	00370	Z1: IF CONTADOR > 500 THEN 

	LABEL?L	_Z1	

; G:\ELE\@BASIC\BOB955~1.PBP	00370	Z1: IF CONTADOR > 500 THEN 
	ICALL?L	L00001
	CMPLE?WCL	_CONTADOR, 001F4h, L00073

; G:\ELE\@BASIC\BOB955~1.PBP	00371	        CONTADOR = CONTADOR - 1
	ICALL?L	L00001
	SUB?WCW	_CONTADOR, 001h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00372	        hpwm 1,127,CONTADOR
	ICALL?L	L00001
	HPWM?CCW	001h, 07Fh, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00373	        PAUSE (rampa-26)
	ICALL?L	L00001
	SUB?BCW	_RAMPA, 01Ah, T1
	PAUSE?W	T1

; G:\ELE\@BASIC\BOB955~1.PBP	00374	        GOTO Z1
	ICALL?L	L00001
	GOTO?L	_Z1

; G:\ELE\@BASIC\BOB955~1.PBP	00375	    ENDIF
	ICALL?L	L00001
	LABEL?L	L00073	

; G:\ELE\@BASIC\BOB955~1.PBP	00376	    toggle porta.7
	ICALL?L	L00001
	TOGGLE?T	_PORTA??7

; G:\ELE\@BASIC\BOB955~1.PBP	00377	    CCP1CON = %00000000
	ICALL?L	L00001
	MOVE?CB	000h, CCP1CON

; G:\ELE\@BASIC\BOB955~1.PBP	00378	    INTCON.4 = 0    
	ICALL?L	L00001
	MOVE?CT	000h, _INTCON??4

; G:\ELE\@BASIC\BOB955~1.PBP	00379	    CONTADOR = 1000
	ICALL?L	L00001
	MOVE?CW	003E8h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00380	Z2: TOGGLE PORTC.2

	LABEL?L	_Z2	

; G:\ELE\@BASIC\BOB955~1.PBP	00380	Z2: TOGGLE PORTC.2
	ICALL?L	L00001
	TOGGLE?T	_PORTC??2

; G:\ELE\@BASIC\BOB955~1.PBP	00381	    PAUSEUS CONTADOR     
	ICALL?L	L00001
	PAUSEUS?W	_CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00382	    if contador => 1000 THEN
	ICALL?L	L00001
	CMPLT?WCL	_CONTADOR, 003E8h, L00075

; G:\ELE\@BASIC\BOB955~1.PBP	00383	        contador = contador + 1
	ICALL?L	L00001
	ADD?WCW	_CONTADOR, 001h, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00384	        if contador > 2500 then 
	ICALL?L	L00001
	CMPLE?WCL	_CONTADOR, 009C4h, L00077

; G:\ELE\@BASIC\BOB955~1.PBP	00385	            contador = contador + 10
	ICALL?L	L00001
	ADD?WCW	_CONTADOR, 00Ah, _CONTADOR

; G:\ELE\@BASIC\BOB955~1.PBP	00386	            if contador => 5000 then 
	ICALL?L	L00001
	CMPLT?WCL	_CONTADOR, 01388h, L00079

; G:\ELE\@BASIC\BOB955~1.PBP	00387	                VUELTAS = VUELTAS + 5
	ICALL?L	L00001
	ADD?WCW	_VUELTAS, 005h, _VUELTAS

; G:\ELE\@BASIC\BOB955~1.PBP	00388	                lcdout $FE,$84,DEC4 VUELTAS                
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	084h
	LCDOUTCOUNT?C	004h
	LCDOUTNUM?W	_VUELTAS
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00389	                return
	ICALL?L	L00001
	RETURN?	

; G:\ELE\@BASIC\BOB955~1.PBP	00390	            ENDIF
	ICALL?L	L00001
	LABEL?L	L00079	

; G:\ELE\@BASIC\BOB955~1.PBP	00391	        ENDIF
	ICALL?L	L00001
	LABEL?L	L00077	

; G:\ELE\@BASIC\BOB955~1.PBP	00392	        GOTO z2
	ICALL?L	L00001
	GOTO?L	_Z2

; G:\ELE\@BASIC\BOB955~1.PBP	00393	    ENDIF                     
	ICALL?L	L00001
	LABEL?L	L00075	

; G:\ELE\@BASIC\BOB955~1.PBP	00396	ANTIRREBOTE:

	LABEL?L	_antirrebote	

; G:\ELE\@BASIC\BOB955~1.PBP	00397	    IF (SW1 = 1) then PAUSE 100 : GOTO ANTIRREBOTE
	ICALL?L	L00001
	CMPNE?TCL	_SW1, 001h, L00081
	PAUSE?C	064h
	GOTO?L	_antirrebote
	LABEL?L	L00081	

; G:\ELE\@BASIC\BOB955~1.PBP	00398	    return
	ICALL?L	L00001
	RETURN?	

; G:\ELE\@BASIC\BOB955~1.PBP	00401	POTENCIOMETRO:                         

	LABEL?L	_potenciometro	

; G:\ELE\@BASIC\BOB955~1.PBP	00402	    ADRESH      = 0
	ICALL?L	L00001
	MOVE?CB	000h, ADRESH

; G:\ELE\@BASIC\BOB955~1.PBP	00403	    ADRESL      = 0                
	ICALL?L	L00001
	MOVE?CB	000h, ADRESL

; G:\ELE\@BASIC\BOB955~1.PBP	00404	    ADCON0.1    = 1    
	ICALL?L	L00001
	MOVE?CT	001h, _ADCON0??1

; G:\ELE\@BASIC\BOB955~1.PBP	00405	LEC:if PIR1.6 = 0 then LEC

	LABEL?L	_LEC	

; G:\ELE\@BASIC\BOB955~1.PBP	00405	LEC:if PIR1.6 = 0 then LEC
	ICALL?L	L00001
	CMPEQ?TCL	_PIR1??6, 000h, _LEC

; G:\ELE\@BASIC\BOB955~1.PBP	00406	    PIR1.6 = 0    
	ICALL?L	L00001
	MOVE?CT	000h, _PIR1??6

; G:\ELE\@BASIC\BOB955~1.PBP	00407	    VALOR = ADRESL + (255 * ADRESH)
	ICALL?L	L00001
	MUL?CBW	0FFh, ADRESH, T1
	ADD?BWW	ADRESL, T1, _VALOR

; G:\ELE\@BASIC\BOB955~1.PBP	00408	    RETURN
	ICALL?L	L00001
	RETURN?	

; G:\ELE\@BASIC\BOB955~1.PBP	00410	buzzer:    

	LABEL?L	_buzzer	

; G:\ELE\@BASIC\BOB955~1.PBP	00411	    sound porta.1,[114,8]
	ICALL?L	L00001
	SOUNDPIN?T	_PORTA??1
	SOUND?CC	072h, 008h

; G:\ELE\@BASIC\BOB955~1.PBP	00412	    pause 50
	ICALL?L	L00001
	PAUSE?C	032h

; G:\ELE\@BASIC\BOB955~1.PBP	00413	    sound porta.1,[114,8]
	ICALL?L	L00001
	SOUNDPIN?T	_PORTA??1
	SOUND?CC	072h, 008h

; G:\ELE\@BASIC\BOB955~1.PBP	00414	    pause 200
	ICALL?L	L00001
	PAUSE?C	0C8h

; G:\ELE\@BASIC\BOB955~1.PBP	00415	    sound porta.1,[114,8]
	ICALL?L	L00001
	SOUNDPIN?T	_PORTA??1
	SOUND?CC	072h, 008h

; G:\ELE\@BASIC\BOB955~1.PBP	00416	    pause 200
	ICALL?L	L00001
	PAUSE?C	0C8h

; G:\ELE\@BASIC\BOB955~1.PBP	00417	    sound porta.1,[110,8]         
	ICALL?L	L00001
	SOUNDPIN?T	_PORTA??1
	SOUND?CC	06Eh, 008h

; G:\ELE\@BASIC\BOB955~1.PBP	00418	    pause 50
	ICALL?L	L00001
	PAUSE?C	032h

; G:\ELE\@BASIC\BOB955~1.PBP	00419	    sound porta.1,[114,8]
	ICALL?L	L00001
	SOUNDPIN?T	_PORTA??1
	SOUND?CC	072h, 008h

; G:\ELE\@BASIC\BOB955~1.PBP	00420	    pause 200
	ICALL?L	L00001
	PAUSE?C	0C8h

; G:\ELE\@BASIC\BOB955~1.PBP	00421	    sound porta.1,[116,8]
	ICALL?L	L00001
	SOUNDPIN?T	_PORTA??1
	SOUND?CC	074h, 008h

; G:\ELE\@BASIC\BOB955~1.PBP	00422	    return            
	ICALL?L	L00001
	RETURN?	

; G:\ELE\@BASIC\BOB955~1.PBP	00425	disable    
	DISABLE?	

; G:\ELE\@BASIC\BOB955~1.PBP	00426	INTERRUPCION:

	LABEL?L	_interrupcion	

; G:\ELE\@BASIC\BOB955~1.PBP	00427	    if INTCON.1 = 1 THEN
	CMPNE?TCL	_INTCON??1, 001h, L00083

; G:\ELE\@BASIC\BOB955~1.PBP	00428	        VUELTAS = VUELTAS + 1
	ADD?WCW	_VUELTAS, 001h, _VUELTAS

; G:\ELE\@BASIC\BOB955~1.PBP	00429	        lcdout $FE,$84,DEC4 VUELTAS 
	LCDOUT?C	0FEh
	LCDOUT?C	084h
	LCDOUTCOUNT?C	004h
	LCDOUTNUM?W	_VUELTAS
	LCDOUTDEC?	

; G:\ELE\@BASIC\BOB955~1.PBP	00430	ESPERA: IF PORTB.0 = 1 THEN 

	LABEL?L	_ESPERA	

; G:\ELE\@BASIC\BOB955~1.PBP	00430	ESPERA: IF PORTB.0 = 1 THEN 
	CMPNE?TCL	_PORTB??0, 001h, L00085

; G:\ELE\@BASIC\BOB955~1.PBP	00431	            PAUSE 10
	PAUSE?C	00Ah

; G:\ELE\@BASIC\BOB955~1.PBP	00432	            GOTO ESPERA
	GOTO?L	_ESPERA

; G:\ELE\@BASIC\BOB955~1.PBP	00433	        ENDIF                 
	LABEL?L	L00085	

; G:\ELE\@BASIC\BOB955~1.PBP	00434	        INTCON.1 = 0
	MOVE?CT	000h, _INTCON??1

; G:\ELE\@BASIC\BOB955~1.PBP	00435	    ENDIF                                                   				                                                            
	LABEL?L	L00083	

; G:\ELE\@BASIC\BOB955~1.PBP	00436	RESUME
	RESUME?	

; G:\ELE\@BASIC\BOB955~1.PBP	00437	ENABLE           
	ENABLE?	

; G:\ELE\@BASIC\BOB955~1.PBP	00439	END                       
	ICALL?L	L00001
	END?	

	END
